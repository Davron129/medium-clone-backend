name: Newman Check CI/CD
on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
jobs:
  deploy:
    name: check code
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: ${{ github.workspace }}

#    services:
#      postgres:
#        image: postgres:15
#        env:
#          POSTGRES_USER: postgres
#          POSTGRES_PASSWORD: postgres-pass
#          POSTGRES_DB: blog_db
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#        ports:
#          - 5432:5432

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Create .env file
        run: cp .env.example .env

      - name: Run app
        run: docker compose up -d --build

      - name: Curl
        run: |
          sleep 5s
          curl -v http://127.0.0.1:8000/health/

      - name: Run API Tests
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - run: npm install -g newman
      - run: newman run "${{ secrets.CHECK_FILE }}" --reporter-json-export ./newman/api-checker-report.json --verbose -r cli,json
        continue-on-error: true
      #      - run: newman run "https://api.getpostman.com/collections/${{collectionID}}?apikey=${{ secrets.POSTMANAPIKEY }}" --environment "https://api.getpostman.com/environments/${{ environmentID }}?apikey=${{ secrets.POSTMANAPIKEY }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: api-checker-artifact
          path: ./newman/api-checker-report.json

      - name: Send run_id
        run: |
          curl --location 'https://api-dev.mohirpool.uz/api/site/accelerators/code-reviews/github-feedbacks/${{ github.actor }}/' \
          --header 'X-API-KEY: ${{ secrets.X_API_KEY }}' \
          --form 'action_run_id=${{ github.run_id }}' \
          --form 'project=${{ secrets.PROJECT_ID }}'

      #      - name: Download test zip File
      #        run: |
      #          curl -L "${{ secrets.CHECK_FILE }}" > tests.zip
      #        continue-on-error: true
      #
      #      - name: Unzip check test zip folder
      #        run: |
      #          unzip tests.zip


      #      - name: Test database connection
      #        run: |
      #          sudo apt-get install -y postgresql-client redis-tools
      #          PGPASSWORD=postgres-pass psql -h localhost -p 5432 -U postgres -d blog_db -c "CREATE TABLE student(id SERIAL PRIMARY KEY, firstName VARCHAR(40) NOT NULL, lastName VARCHAR(40) NOT NULL, age INT, address VARCHAR(80), email VARCHAR(40))"
      #          PGPASSWORD=postgres-pass psql -h localhost -p 5432 -U postgres -d blog_db -c "INSERT INTO student(firstname, lastname, age, address, email) VALUES('test', 'test2', 12, 'test3', 'admin@admin.com') RETURNING *"
      #          PGPASSWORD=postgres-pass psql -h localhost -p 5432 -U postgres -d blog_db -c "SELECT * FROM student"
      #        continue-on-error: true