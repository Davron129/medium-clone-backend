name: Medium Clone Check CI/CD
on:
  workflow_dispatch:
    inputs:
      tests_path:
        description: 'Tests path'
        required: false
        default: 'tests'
  push:
    branches: [ "main" ]

jobs:
  deploy:
    name: Check code via CI/CD
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Send a signal to the webhook that the job has started.
        run: |
          curl -X POST --location 'https://api-dev.mohirpool.uz/api/site/accelerators/code-reviews/github-feedbacks/${{ github.actor }}/' \
          --header 'X-API-KEY: ${{ secrets.X_API_KEY }}' \
          --form 'action_run_id=${{ github.run_id }}' \
          --form 'project_id=${{ secrets.PROJECT_ID }}' \
          --form 'tests_path=${{ github.event.inputs.tests_path }}'

      - name: Checkout original repository
        uses: actions/checkout@v3
        with:
          repository: sirojiddinyakubov/medium-clone-backend
          path: original-repo
          ref: main

      - name: Checkout forked repository
        uses: actions/checkout@v3
        with:
          path: forked-repo
          ref: main

      - name: Move tests folder from original to forked
        run: |
          rm -rf forked-repo/tests
          mv original-repo/tests forked-repo/
          rm -rf original-repo

      - name: Create .env file
        working-directory: forked-repo
        run: cp .env.example .env

      - name: Run app
        working-directory: forked-repo
        run: |
          docker compose up -d --build
          sleep 5s
          docker ps -a
          sleep 5s
          docker logs medium_app

      - name: Curl
        run: |
          sleep 5s
          curl -v http://127.0.0.1:8000/health/

      - name: Run Tests
        working-directory: forked-repo
        run: docker compose exec medium_app pytest ${{ github.event.inputs.tests_path }} --cache-clear -vv --json-report --json-report-file=./reports/unittest-checker-report.json --json-report-indent=2
        continue-on-error: true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: unittest-checker-artifact
          path: ./reports/unittest-checker-report.json

      - name: Send run_id
        if: always()
        run: |
          curl -X PUT --location 'https://api-dev.mohirpool.uz/api/site/accelerators/code-reviews/github-feedbacks/${{ github.actor }}/' \
          --header 'X-API-KEY: ${{ secrets.X_API_KEY }}' \
          --form 'action_run_id=${{ github.run_id }}' \
          --form 'project_id=${{ secrets.PROJECT_ID }}' \
          --form 'tests_path=${{ github.event.inputs.tests_path }}'